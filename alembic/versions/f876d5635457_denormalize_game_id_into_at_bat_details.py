"""denormalize game_id into at_bat_details

Revision ID: f876d5635457
Revises: a41a40513d45
Create Date: 2025-08-08 06:24:46.159560

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f876d5635457"
down_revision: Union[str, None] = "a41a40513d45"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # 步驟 1: 新增 game_id 欄位，暫時允許 NULL
    op.add_column("at_bat_details", sa.Column("game_id", sa.Integer(), nullable=True))

    # 步驟 2: 執行原生 SQL 來回填舊資料
    # 從 player_game_summary 表中，根據關聯的 ID，將 game_id 的值更新到 at_bat_details 表
    op.execute("""
        UPDATE at_bat_details
        SET game_id = player_game_summary.game_id
        FROM player_game_summary
        WHERE at_bat_details.player_game_summary_id = player_game_summary.id
    """)

    # 步驟 3: 資料回填後，將 game_id 欄位設為 NOT NULL
    op.alter_column("at_bat_details", "game_id", nullable=False)

    # 步驟 4: 建立外鍵約束
    op.create_foreign_key(
        "fk_at_bat_details_game_id_game_results",
        "at_bat_details",
        "game_results",
        ["game_id"],
        ["id"],
    )

    # 步驟 5: 建立最終的、能徹底優化排序的複合索引
    op.create_index(
        "ix_at_bat_details_denormalized_for_streaks",
        "at_bat_details",
        ["game_id", "inning", "sequence_in_game"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_at_bat_details_denormalized_for_streaks", table_name="at_bat_details"
    )
    op.drop_constraint(
        "fk_at_bat_details_game_id_game_results", "at_bat_details", type_="foreignkey"
    )
    op.drop_column("at_bat_details", "game_id")
    # ### end Alembic commands ###
