# .github/workflows/ci.yml

name: Python CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # 【新】: 定義此工作需要的服務容器
    services:
      # PostgreSQL 服務
      postgres:
        image: postgres:15
        # 設定健康檢查，確保資料庫已準備好接受連線
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # 設定資料庫的環境變數，使其與我們的 .env 檔案一致
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydb
        ports:
          # 將容器的 5432 port 映射到主機的 5432 port
          - 5432:5432

      # Redis 服務
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff black pytest

      - name: Install Playwright Browsers
        run: |
          playwright install --with-deps

      - name: Lint and Format Check
        run: |
          ruff check .
          black --check .

      - name: Run Pytest
        # 【新】: 為測試步驟設定環境變數
        # 讓我們的應用程式知道如何在 CI 環境中連接到服務容器
        env:
          DATABASE_URL: postgresql://myuser:mypassword@localhost:5432/mydb
          DRAMATIQ_BROKER_URL: redis://localhost:6379/0
          API_KEY: test-ci-key
        run: |
          pytest
